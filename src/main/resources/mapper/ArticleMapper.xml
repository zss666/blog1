<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zss.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="cn.zss.blog.entity.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="is_top" jdbcType="BIT" property="isTop" />
    <result column="traffic" jdbcType="INTEGER" property="traffic" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="dislike_count" jdbcType="INTEGER" property="dislikeCount" />
    <result column="create_by" jdbcType="TIMESTAMP" property="createBy" />
    <result column="modified_by" jdbcType="TIMESTAMP" property="modifiedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, summary, content, is_top, traffic, comment_count, like_count, dislike_count, 
    create_by, modified_by
  </sql>
  <select id="selectByExample" parameterType="cn.zss.blog.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tbl_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.zss.blog.entity.Article" useGeneratedKeys="true">
    insert into tbl_article (title, summary, content, 
      is_top, traffic, comment_count, 
      like_count, dislike_count, create_by, 
      modified_by)
    values (#{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{isTop,jdbcType=BIT}, #{traffic,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{dislikeCount,jdbcType=INTEGER}, #{createBy,jdbcType=TIMESTAMP}, 
      #{modifiedBy,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.zss.blog.entity.Article" useGeneratedKeys="true">
    insert into tbl_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="isTop != null">
        is_top,
      </if>
      <if test="traffic != null">
        traffic,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="dislikeCount != null">
        dislike_count,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        #{isTop,jdbcType=BIT},
      </if>
      <if test="traffic != null">
        #{traffic,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="dislikeCount != null">
        #{dislikeCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zss.blog.entity.Article">
    update tbl_article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        is_top = #{isTop,jdbcType=BIT},
      </if>
      <if test="traffic != null">
        traffic = #{traffic,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="dislikeCount != null">
        dislike_count = #{dislikeCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zss.blog.entity.Article">
    update tbl_article
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      is_top = #{isTop,jdbcType=BIT},
      traffic = #{traffic,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      dislike_count = #{dislikeCount,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>